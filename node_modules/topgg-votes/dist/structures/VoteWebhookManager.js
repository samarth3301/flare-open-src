"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VoteWebhookManager = void 0;
const sdk_1 = require("@top-gg/sdk");
const express = require("express");
const chalk = require("chalk");
const util_1 = require("../util");
class VoteWebhookManager {
    _client;
    _port;
    _path;
    _authorization;
    constructor(options) {
        this._client = options.client;
        this._port = options.port ?? 22565;
        this._path = options?.path || '/dblwebhook';
        this._authorization = options?.authorization || 'WEBHOOK';
    }
    setPort(port) {
        this._port = port ?? 22565;
        return this;
    }
    setPath(path) {
        this._path = path ?? '/dblwebhook';
        return this;
    }
    startWebhookServer() {
        const webhook = new sdk_1.Webhook(this._authorization);
        const app = express();
        app.post(this._path, webhook.listener((vote) => {
            if (vote.bot) {
                this._client.emit(util_1.VoteClientEvents.BotVote, {
                    userId: vote.user,
                    botId: vote.bot,
                    isWeekend: vote.isWeekend,
                    type: vote.type,
                });
            }
            if (vote.guild) {
                this._client.emit(util_1.VoteClientEvents.ServerVote, {
                    userId: vote.user,
                    guildId: vote.guild,
                    type: vote.type,
                });
            }
        }));
        app.listen(this._port, () => {
            console.log(chalk.white(chalk.bold('[Top.gg Votes]')), chalk.green(`Vote client is running on port ${this._port}`));
        });
    }
}
exports.VoteWebhookManager = VoteWebhookManager;
