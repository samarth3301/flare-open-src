"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.manageBtn = void 0;
const error_1 = require("../error");
const manageBtnRole_1 = require("../handler/manageBtnRole");
const manageTicket_1 = require("../handler/manageTicket");
const manageGiveaway_1 = require("../handler/manageGiveaway");
/**
 * ## _~manageBtn~_
 * manageBtn() handles btnRole(), betterBtnRole(), giveaway() and ticketSetup() combined. As users don't use everything from the package. Using this combined handler was a mess. So we separated it into three handlers.
 *
 * @deprecated Use {@link manageBtnRole()} to handle btnRole() and betterBtnRole()
 * @deprecated Use {@link manageGiveaway()} to handle giveaway()
 * @deprecated Use {@link manageTicket()} to handle ticketSetup()
 */
async function manageBtn(interaction, options = {}) {
    (0, error_1.Deprecated)({
        desc: 'manageBtn() is separated to three handlers. manageBtnRole() | manageTicket() | manageGiveaway(). manageBtn is deprecated !'
    });
    let resolve;
    resolve = await (0, manageBtnRole_1.manageBtnRole)(interaction, options);
    resolve = await (0, manageGiveaway_1.manageGiveaway)(interaction, options);
    resolve = await (0, manageTicket_1.manageTicket)(interaction, options);
    return resolve;
}
exports.manageBtn = manageBtn;
