import { User } from 'discord.js';
import { ExtendedInteraction, ExtendedMessage, CustomizableButton, CustomizableEmbed } from './typedef';
/**
 * **Documentation Url** of the type: https://simplyd.js.org/docs/fun/rps#rpsbuttons
 */
export interface RpsButtons {
    rock?: CustomizableButton;
    paper?: CustomizableButton;
    scissor?: CustomizableButton;
}
/**
 * **Documentation Url** of the type: https://simplyd.js.org/docs/fun/rps#rpsembeds
 */
export interface RpsEmbeds {
    request?: CustomizableEmbed;
    win?: CustomizableEmbed;
    draw?: CustomizableEmbed;
    game?: CustomizableEmbed;
    timeout?: CustomizableEmbed;
    decline?: CustomizableEmbed;
}
/**
 * **Documentation Url** of the options: https://simplyd.js.org/docs/fun/rps#rpsoptions
 */
export type rpsOptions = {
    embed?: RpsEmbeds;
    buttons?: RpsButtons;
    opponent?: User;
    strict?: boolean;
};
/**
 * ## rps
 * ### A classic RPS game, except this time it's on Discord to play with your pals, how cool is that ?
 *
 * @async
 * @param {ExtendedMessage | ExtendedInteraction} msgOrint [`ExtendedMessage`](https://simplyd.js.org/docs/typedef/extendedmessage) | [`ExtendedInteraction`](https://simplyd.js.org/docs/typedef/extendedinteraction)
 * @param {rpsOptions} options [`rpsOptions`](https://simplyd.js.org/docs/fun/rps#rpsOptions)
 * @returns {Promise<User>} [`User`](https://discord.js.org/#/docs/discord.js/stable/class/User)
 *
 * ---
 *
 * @link [`Documentation`](https://simplyd.js.org/docs/Fun/rps)
 * @example simplydjs.rps(interaction)
 */
export declare function rps(msgOrint: ExtendedMessage | ExtendedInteraction, options?: rpsOptions): Promise<User>;
